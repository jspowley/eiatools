eia_version(creds::eia_key)
test()
use_r("add_facets")
# Conversion for known facets and headers:
conversion_table <- list(
sort = "sort[0][column]",
direction = "sort[0][direction]",
data = "data[0]"
)
conversion_table["sort"]
conversion_table["sort"][1]
conversion_table["sort"][[1]
conversion_table["sort"][[1]]
load_all()
map_headers("https://mysite.org", "1234", list(sort = "period", direction = "desc", data = "value"))
load_all()
map_headers("https://mysite.org", "1234", list(sort = "period", direction = "desc", data = "value"))
load_all()
map_headers("https://mysite.org", "1234", list(sort = "period", direction = "desc", data = "value"))
map_headers("https://mysite.org", "1234", list(sort = "period", direction = "desc", data = "value")) %>% paste0(collapse = &)
map_headers("https://mysite.org", "1234", list(sort = "period", direction = "desc", data = "value")) %>% paste0(collapse = "&")
map_headers("https://mysite.org", "1234", list(sort = "period", direction = "desc", data = "value"))
load_all()
map_headers("https://mysite.org", "1234", list(sort = "period", direction = "desc", data = "value")) -> temp
paste(names(temp), unlist(temp)))
paste(names(temp), unlist(temp))
paste(names(temp), unlist(temp), sep = "=", collapse = "&")
load_all()
map_headers("https://mysite.org", "1234", list(sort = "period", direction = "desc", data = "value"))
load_all()
map_headers("https://mysite.org", "1234", list(sort = "period", direction = "desc", data = "value"))
load_all()
key <- creds::eia_key
expect_no_error({
products <- c('petroleum/pri/spt/data', 'natural-gas/pri/sum/data') ## These Are The Only Two That Have Price Data Related (So They Maintain Consistent Columns)
all_series <- list() ## Discuss What We Care About Mapping For This Project
for (product in products){
df <- eia_map(sub = product, offset = 0, freq = "monthly", api_key = key )
all_series <- append(all_series, list(df))
}
all_series_df <- dplyr::bind_rows(all_series)
all_series_df ## Missing Multiple // Will Work On This Week, Wanted A General Idea
})
#expect_no_error({
products <- c('petroleum/pri/spt/data', 'natural-gas/pri/sum/data') ## These Are The Only Two That Have Price Data Related (So They Maintain Consistent Columns)
all_series <- list() ## Discuss What We Care About Mapping For This Project
for (product in products){
df <- eia_map(sub = product, offset = 0, freq = "monthly", api_key = key )
all_series <- append(all_series, list(df))
}
key <- creds::eia_key
#expect_no_error({
products <- c('petroleum/pri/spt/data', 'natural-gas/pri/sum/data') ## These Are The Only Two That Have Price Data Related (So They Maintain Consistent Columns)
all_series <- list() ## Discuss What We Care About Mapping For This Project
for (product in products){
df <- eia_map(sub = product, offset = 0, freq = "monthly", api_key = key)
all_series <- append(all_series, list(df))
}
load_all()
key <- creds::eia_key
#expect_no_error({
products <- c('petroleum/pri/spt/data', 'natural-gas/pri/sum/data') ## These Are The Only Two That Have Price Data Related (So They Maintain Consistent Columns)
all_series <- list() ## Discuss What We Care About Mapping For This Project
for (product in products){
df <- eia_map(sub = product, offset = 0, freq = "monthly", api_key = key)
all_series <- append(all_series, list(df))
}
load_all()
key <- creds::eia_key
#expect_no_error({
products <- c('petroleum/pri/spt/data', 'natural-gas/pri/sum/data') ## These Are The Only Two That Have Price Data Related (So They Maintain Consistent Columns)
all_series <- list() ## Discuss What We Care About Mapping For This Project
for (product in products){
df <- eia_map(sub = product, offset = 0, freq = "monthly", api_key = key)
all_series <- append(all_series, list(df))
}
all_series_df <- dplyr::bind_rows(all_series)
"https://api.eia.gov/v2/petroleum/pri/spt/data?sort[0][column]=period&sort[0][direction]=desc&data[0]=value&length=5000&offset=0&frequency=monthly&api_key=UKCNbCB0m8aixfPBshQU3Jdlz2uZsEbG2HebvhHX" %>% eia_call()
load_all()
key <- creds::eia_key
#expect_no_error({
products <- c('petroleum/pri/spt/data', 'natural-gas/pri/sum/data') ## These Are The Only Two That Have Price Data Related (So They Maintain Consistent Columns)
all_series <- list() ## Discuss What We Care About Mapping For This Project
for (product in products){
df <- eia_map(sub = product, offset = 0, freq = "monthly", api_key = key)
all_series <- append(all_series, list(df))
}
load_all()
key <- creds::eia_key
#expect_no_error({
products <- c('petroleum/pri/spt/data', 'natural-gas/pri/sum/data') ## These Are The Only Two That Have Price Data Related (So They Maintain Consistent Columns)
all_series <- list() ## Discuss What We Care About Mapping For This Project
for (product in products){
df <- eia_map(sub = product, offset = 0, freq = "monthly", api_key = key)
all_series <- append(all_series, list(df))
}
load_all()
key <- creds::eia_key
#expect_no_error({
products <- c('petroleum/pri/spt/data', 'natural-gas/pri/sum/data') ## These Are The Only Two That Have Price Data Related (So They Maintain Consistent Columns)
all_series <- list() ## Discuss What We Care About Mapping For This Project
for (product in products){
df <- eia_map(sub = product, offset = 0, freq = "monthly", api_key = key)
all_series <- append(all_series, list(df))
}
load_all()
key <- creds::eia_key
#expect_no_error({
products <- c('petroleum/pri/spt/data', 'natural-gas/pri/sum/data') ## These Are The Only Two That Have Price Data Related (So They Maintain Consistent Columns)
all_series <- list() ## Discuss What We Care About Mapping For This Project
for (product in products){
df <- eia_map(sub = product, offset = 0, freq = "monthly", api_key = key)
all_series <- append(all_series, list(df))
}
all_series_df <- dplyr::bind_rows(all_series)
load_all()
key <- creds::eia_key
#expect_no_error({
products <- c('petroleum/pri/spt/data', 'natural-gas/pri/sum/data') ## These Are The Only Two That Have Price Data Related (So They Maintain Consistent Columns)
all_series <- list() ## Discuss What We Care About Mapping For This Project
for (product in products){
df <- eia_map(sub = product, offset = 0, freq = "monthly", api_key = key)
all_series <- append(all_series, list(df))
}
all_series_df <- dplyr::bind_rows(all_series)
all_series_df ## Missing Multiple // Will Work On This Week, Wanted A General Idea
document()
check()
test()
use_package("creds")
document()
check()
document()
check()
document()
check()
test()
?uniqe()
?unique()
document()
check()
load_all()
check()
test()
available::available("creds")
available::available("myCreds")
library(devtools)
load_all()
eia_meta(creds::eia_key)
eia_meta("", api_key = creds::eia_key)
eia_meta("", api_key = creds::eia_key) -> temp
temp
temp$routes %>% str()
document()
use_r("build_index")
use_r("get_all_freq")
document()
check()
eia_meta("", creds::eia_key)
eia_meta("", creds::eia_key) -> temp
View(temp)
eia_meta("coal", creds::eia_key) -> temp
eia_meta("coal/shipments", creds::eia_key) -> temp
eia_meta("coal/shipments/receipts", creds::eia_key) -> temp
document()
check()
View(temp)
load_all()
library(devtools)
load_all()
library(devtools)
document()
check()
library(devtools)
document()
load_all()
eia_reports
eia_reports()
eia_reports("petroleum")
use_package(reticulate)
use_package("reticulate")
load_all()
eia_reports("petroleum")
# Thisdoesn't appear to be working as intended
reticulate::py_install("pandas; openpyxl")
# Thisdoesn't appear to be working as intended
reticulate::py_install("pandas")
reticulate::py_install("openpyxl")
load_all()
get_reports("petroleum")
eia_reports("petroleum")
reticulate::py_install("xlrd")
eia_reports("petroleum")
load_all()
eia_reports("petroleum")
reticulate::py_last_error()
load_all()
reticulate::py_last_error()
eia_reports("petroleum")
load_all()
eia_reports("petroleum")
reticulate::py_last_error()
use_r("route_tree")
load_all()
route_tree(creds::api_key)
route_tree(creds::eia_key)
route_tree("", pi_key = creds::eia_key)
route_tree("", api_key = creds::eia_key)
route_tree("", api_key = creds::eia_key) %>% View()
eia_meta("", creds::eia_key)
eia_meta("", creds::eia_key) %>% View()
eia_meta("PET", creds::eia_key) %>% View()
eia_meta("petroleum", creds::eia_key) %>% View()
eia_meta("petroleum/sum", creds::eia_key) %>% View()
eia_meta("petroleum/sum/snd", creds::eia_key) %>% View()
eia_get_all_freq("petroleum/sum/snd", creds::eia_key) %>% View()
get_all_freq("petroleum/sum/snd", creds::eia_key) %>% View()
get_all_freq("petroleum/sum/snd", creds::eia_key) %>% get_all_freq
get_all_freq("petroleum/sum/snd", creds::eia_key) %>% get_all_freq()
eia_meta("petroleum/sum/snd", creds::eia_key) %>% get_all_freq()
use_r("get_facet_options")
eia_meta("petroleum/sum/snd", creds::eia_key) %>% View()
load_all()
route_tree("petroleum/sum/snd", creds::eia_key) %>% View()
load_all()
route_tree("petroleum/sum/snd", creds::eia_key) %>% View()
load_all()
route_tree("petroleum/sum/snd", creds::eia_key) %>% View()\
route_tree("petroleum/sum/snd", creds::eia_key) %>% View()
load_all()
route_tree("petroleum/sum/snd", creds::eia_key) %>% View()
load_all()
route_tree("petroleum/sum/snd", creds::eia_key) %>% View()
load_all()
route_tree("petroleum/sum/snd", creds::eia_key) %>% View()
load_all()
route_tree("petroleum/sum/snd", creds::eia_key) %>% View()
load_all()
route_tree("petroleum/sum/snd", creds::eia_key) %>% View()
route_tree("petroleum/sum/snd", creds::eia_key) -> temp
View(temp)
str(temp)
str(temp$freq)
for(f in facet_opts){
}
use_r("get_facet_data")
load_all()
get_facet_data("petroleum/sum/snd", "series", creds::eia_key)
load_all()
get_facet_data("petroleum/sum/snd", "series", creds::eia_key)
get_facet_data("petroleum/sum/snd", "series", creds::eia_key) %>% View()
load_all()
get_facet_data("petroleum/sum/snd", "series", creds::eia_key) %>% View()
get_facet_data("petroleum/sum/snd", "series", creds::eia_key) %>% str()
load_all()
route_tree("petroleum/sum/snw", creds::eia_key)
document()
load_all()
route_tree("petroleum/sum/snw", creds::eia_key)
route_tree("petroleum/sum/snw", creds::eia_key) -> temp
View(temp)
load_all()
route_tree("petroleum/sum/snw", creds::eia_key) -> temp
View(temp)
str(temp)
load_all()
route_tree("petroleum/sum/snw", creds::eia_key) -> temp
str(temp)
load_all()
route_tree("petroleum/sum/snw", creds::eia_key) -> temp
load_all()
route_tree("petroleum/sum/snw", creds::eia_key) -> temp
get_rouets("petroleum/sum", creds::eia_key) -> temp
get_routes("petroleum/sum", creds::eia_key) -> temp
eia_meta("petroleum/sum", creds::eia_key) -> temp
View(temp)
route_tree("petroleum/sum/snd", creds::eia_key) -> temp
?symn
?sym
use_package("rlang")
load_all()
route_tree("petroleum/sum/snd", creds::eia_key) -> temp
temp %>% str()
temp$product
temp$product %>% names()
temp$product %>% str()
temp$product[[1]]
temp$product[[1]] %>% names()
temp$product[[1]]
temp$product[[1]][[1]]
temp$product[[1]][[2]]
load_all()
route_tree("petroleum/sum", creds::eia_key) -> temp
"temp"
!!"temp"
!!sym("temp")
!!rlang::sym("temp")
!!rlang::sym("temp") := 1
load_all()
route_tree("petroleum/sum/snd", creds::eia_key) -> temp
load_all()
route_tree("petroleum/sum/snd", creds::eia_key) -> temp
View(temp)
load_all()
route_tree("petroleum/sum/snd", creds::eia_key) -> temp
View(temp)
load_all()
route_tree("petroleum/sum", creds::eia_key) -> temp
load_all()
route_tree("petroleum/sum", creds::eia_key) -> temp
View(temp)
load_all()
route_tree("petroleum/sum", creds::eia_key) -> temp
View(temp)
use_r("get_data_types")
eia_meta("petroleum/sum/snd", creds::eia_key) %>% View()
eia_meta("petroleum/sum/snd", creds::eia_key) %>% .data %>% names()
eia_meta("petroleum/sum/snd", creds::eia_key) %>% .$data %>% names()
load_all()
route_tree("petroleum/sum", creds::eia_key) -> temp
View(temp)
document()
check()
document()
pkgload::dev_help('eia_map')
document()
check()
document()
check()
usethis::use_import_from("rlang", ":=")
document()
check()
devtools::load_all()
route_tree_sample <- route_tree("petroleum/sum", creds::eia_key)
usethis::use_data(route_tree_sample, overwrite = T)
load_all()
eiatools::route_tree_sample
document()
check()
temp <- route_tree("petroleum", creds::eia_key)
library(devtools)
load_all()
eiatools::eia_reports()
eiatools::eia_reports("petroleum")
get_routes("petroleum", creds::eia_key)
eia_meta("petroleum", creds::eia_key) %>% get_routes()
eia_meta("petroleum/crd", creds::eia_key) %>% get_routes()
eia_meta("petroleum/crd/wellend", creds::eia_key) %>% get_routes()
eia_meta("petroleum/crd/wellend", creds::eia_key) %>% get_facet_types()
get_facet_data("petroleum/crd/wellend", "series", creds::eia_key)
get_facet_data("petroleum/crd/wellend", "series", creds::eia_key) -> temp
View(temp)
temp %>% str()
temp == list()
is.list(temp)
is.list(temp) & length(temp) == 0
load_all()
route_tree("petroleum/crd/wellend", creds::eia_key)
load_all()
route_tree("petroleum/crd/wellend", creds::eia_key)
eia_meta("petroleum/crd/", creds::eia_key) %>% get_routes()
route_tree("petroleum/crd/pres", creds::eia_key)
eia_meta("petroleum/crd/pres", creds::eia_key) -> working
eia_meta("petroleum/crd/wellend", creds::eia_key) -> broken
View(broken)
View(working)
load_all()
eia_meta("petroleum/crd/wellend", creds::eia_key) -> broken
route_tree("petroleum/crd/wellend", creds::eia_key) -> broken2
load_all()
route_tree("petroleum/crd/wellend", creds::eia_key) -> broken2
load_all()
route_tree("petroleum/crd/wellend", creds::eia_key) -> broken2
load_all()
route_tree("petroleum/crd/wellend", creds::eia_key) -> broken2
load_all()
route_tree("petroleum/crd/wellend", creds::eia_key) -> broken2
eia_meta("petroleum/crd/wellend", creds::eia_key) -> broken2
View(broken2)
load_all()
route_tree("petroleum/crd/wellend", creds::eia_key) -> broken2
load_all()
document()
check()
document()
check()
load_all()
route_tree("petroleum", creds::eia_key) -> PET
View(PET)
library(devtools)
load_all()
PET
pet
eiatools::route_tree_sample
route_tree("petroleum", creds::eia_key) -> PET
PET
usethis::use_data(PET, overwrite = T)
document()
check()
eia_meta("", creds::eia_key)
eia_meta("", creds::eia_key) %>% get_routes()
View(PET)
View(PET[[8]][[1]])
View(PET[[7]][[1]])
View(PET[[9]][[1]])
View(PET[[8]][[1]])
View(PET[[10]][[1]])
View(PET[[8]][[16]])
STEO <- route_tree("steo", creds::eia_key)
usethis::use_data(STEO, overwrite = T)
View(STEO)
View(STEO[[7]][[1]])
load_all()
STEO <- route_tree("steo", creds::eia_key)
usethis::use_data(STEO, overwrite = T)
View(STEO)
load_all()
STEO <- route_tree("steo", creds::eia_key)
load_all()
STEO <- route_tree("steo", creds::eia_key)
View(STEO)
usethis::use_data(STEO, overwrite = T)
PET <- route_tree("petroleum", creds::eia_key)
PET <- route_tree("petroleum/move/res", creds::eia_key)
load_all()
PET <- route_tree("petroleum/move/res", creds::eia_key)
load_all()
PET <- route_tree("petroleum/move/res", creds::eia_key)
eia_meta("petroleum/move/res")
eia_meta("petroleum/move/res", creds::eia_key)
load_all()
eia_meta("petroleum/move/res", creds::eia_key)
library(devtools)
PET
load_all()
PET
use_r("data_tree")
PET
root
PET %>% mutate(nickname = NA) -> test
PET %>% dplyr::mutate(nickname = NA) -> test
View(test)
load_all()
test$api_endpoint
test$api_endpoint[1]
eia_data(test$api_endpoint[1], "monthly",
load_all()
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key)
load_all()
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key)
test[1,]
test[1,]$freq
load_all()
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key)
load_all()
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key)
PET$data[1]
PET$data[[1]]
PET$data[[[1]]]
PET$data[[1]][1]
PET$data[[1]][[1]]
PET$data[1]
PET$data[1] %>% unlist()
PET$data[1] %>% append("value2")
PET$data[1] %>% unlist()
PET$data[1] %>% unlist() %>% list(., "value2")
PET$data[1] %>% unlist() %>% list(., "value2") %>% unlist()
route_tree("coal", creds::eia_key)
eia_meta("coal", creds::eia_key)
eia_meta("coal", creds::eia_key) %>% get_routes()
eia_meta("coal/hipments", creds::eia_key) %>% get_routes()
eia_meta("coal/shipments", creds::eia_key) %>% get_routes()
eia_meta("coal/shipments/receipts", creds::eia_key) %>% get_routes()
route_treee("coal/shipments/receipts", creds::eia_key) -test2
route_treee("coal/shipments/receipts", creds::eia_key) -> test2
route_tree("coal/shipments/receipts", creds::eia_key) -> test2
test2$data
test2$data %>% unlist()
test2$data %>% unlist() %>% unlist()
load_all()
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key)
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key, data_types = c("value"))
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key, data_types = "value")
load_all()
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key, data_types = "value")
test$facets
test$facets[1]
test$facets[1][2]
test$facets[[1]]
test$facets[[1]][4]
list(test$facets[[1]][4] = test$series)
list(!!sym(test$facets[[1]][4]) := test$series)
f_name <- "series"
list(f_name = 1)
list(!!sym(f_name) = 1)
list(f_name = 1)
load_all()
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key, data_types = "value")
View(test[[7]][[1]])
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key, data_types = "value", facets = data.frame(facet_type = "duoarea", facet_id = R40))
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key, data_types = "value", facets = data.frame(facet_type = "duoarea", facet_id = "R40"))
load_all()
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key, data_types = "value", facets = data.frame(facet_type = "duoarea", facet_id = "R40"))
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key, data_types = "value", facets = data.frame(facet_name = "duoarea", facet_id = "R40"))
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key, data_types = "value", facets = data.frame(facet_name = "duoarea", facet_id = "R40")) %>% eia_call(api_key = creds::eia_key)
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key, data_types = "value", facets = data.frame(facet_name = "duoarea", facet_id = "R40")) %>% eia_call()
load_all()
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key, data_types = "value", facets = data.frame(facet_name = "duoarea", facet_id = "R40")) %>% eia_call()
load_all()
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key, data_types = "value", facets = data.frame(facet_name = "duoarea", facet_id = "R40"))
eia_data(test$api_endpoint[1], "monthly", api_key = creds::eia_key, data_types = "value", facets = data.frame(facet_name = "duoarea", facet_id = "R40")) %>% str()
