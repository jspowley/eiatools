library(httr)
library(jsonlite)
# Replace this with your actual EIA API key
api_key <- "OaPIhpkD7JVc5gb7xOTMZMh9iA9uegIVBFRj6wQg"
# URL to retrieve series data
url <- paste0("https://api.eia.gov/series/?api_key=", api_key)
# Send GET request
response <- GET(url)
# Parse the JSON response
data <- fromJSON(content(response, "text"))
# Extract the series list (if available)
if ("series" %in% names(data)) {
series_ids <- data$series
series_ids_df <- as.data.frame(series_ids)
print(head(series_ids_df)) # Show the first few series IDs
} else {
print("No series found in the API response")
}
library(httr)
library(jsonlite)
# Replace this with your actual EIA API key
api_key <- "OaPIhpkD7JVc5gb7xOTMZMh9iA9uegIVBFRj6wQg"
# URL to retrieve series data
url <- paste0("https://api.eia.gov/v2/series/?api_key=", api_key)
# Send GET request
response <- GET(url)
# Parse the JSON response
data <- fromJSON(content(response, "text"))
# Extract the series list (if available)
if ("series" %in% names(data)) {
series_ids <- data$series
series_ids_df <- as.data.frame(series_ids)
print(head(series_ids_df)) # Show the first few series IDs
} else {
print("No series found in the API response")
}
library(httr)
library(jsonlite)
# Replace this with your actual EIA API key
api_key <- "OaPIhpkD7JVc5gb7xOTMZMh9iA9uegIVBFRj6wQg"
# URL to retrieve series data
url <- paste0("https://api.eia.gov\/v2\/seriesid\/V1_SERIES_ID?api_key=", api_key)
library(httr)
library(jsonlite)
# Replace this with your actual EIA API key
api_key <- "OaPIhpkD7JVc5gb7xOTMZMh9iA9uegIVBFRj6wQg"
# URL to retrieve series data
url <- paste0("https://api.eia.gov/v2/seriesid?api_key=", api_key)
# Send GET request
response <- GET(url)
# Parse the JSON response
data <- fromJSON(content(response, "text"))
# Extract the series list (if available)
if ("series" %in% names(data)) {
series_ids <- data$series
series_ids_df <- as.data.frame(series_ids)
print(head(series_ids_df)) # Show the first few series IDs
} else {
print("No series found in the API response")
}
source("~/GitHub/eiatools/shiny-app/app.R", echo=TRUE)
runApp('GitHub/eiatools/shiny-app')
?plot
runApp('GitHub/eiatools/shiny-app')
install.packages("RTLedu")
?tidyquant::tq_exchange()
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
runApp('GitHub/eiatools/shiny-app')
